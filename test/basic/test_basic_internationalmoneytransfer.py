# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

from selenium.webdriver.support import expected_conditions as EC

from utils.assert_attribute import assert_id_disbursement, assert_status_disbursement
from utils.assert_redirect import assert_url_contains
from utils.auth_actions import is_logged_in, perform_login
from utils.webdriver_setup import get_webdriver

class TestInternationalMoneyTransfer():
  def setup_method(self, method):
    self.driver = get_webdriver()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_internationalmoneyTransfer(self):
    self.driver.get("https://basic.amanah-staging.cs.ui.ac.id/")
    time.sleep(2)
    self.driver.set_window_size(1552, 832)
    time.sleep(2)
    
    if(not is_logged_in(self.driver)):
        perform_login(self.driver)
        
    time.sleep(2)
    # Click the "Program" button to reveal the dropdown
    program_button = WebDriverWait(self.driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//button[contains(text(), 'Program')]"))
    )
    program_button.click()
    
    # Wait for the dropdown to appear and click the "Aktivitas" link
    aktivitas_link = WebDriverWait(self.driver, 10).until(
        EC.element_to_be_clickable((By.XPATH, "//a[@href='/activity']/span[contains(text(), 'Aktivitas')]"))
    )
    aktivitas_link.click()
    
    time.sleep(2)
    tarik_dana_button = WebDriverWait(self.driver, 10).until(
    EC.element_to_be_clickable((By.XPATH, "(//button[contains(text(), 'Tarik Dana')])[1]"))
    )
    tarik_dana_button.click()
    
    time.sleep(1)
    self.driver.find_element(By.NAME, "disbursementMethod").click()
    time.sleep(1)
    dropdown = self.driver.find_element(By.NAME, "disbursementMethod")
    time.sleep(1)
    dropdown.find_element(By.XPATH, "//option[. = 'International Money Transfer']").click()
    time.sleep(1)
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary").click()
    
        
    # Form data
    self.driver.find_element(By.NAME, "beneficiary_account_number").click()
    self.driver.find_element(By.NAME, "beneficiary_account_number").send_keys("1122333300")
    self.driver.find_element(By.NAME, "beneficiary_bank_name").click()
    self.driver.find_element(By.NAME, "beneficiary_bank_name").send_keys("Allica Bank")
    self.driver.find_element(By.NAME, "amount").click()
    self.driver.find_element(By.NAME, "amount").click()
    self.driver.find_element(By.NAME, "amount").send_keys("100000")
    self.driver.find_element(By.CSS_SELECTOR, ".form-control:nth-child(4) > .input").click()
    self.driver.find_element(By.CSS_SELECTOR, ".form-control:nth-child(4) > .input").send_keys("ini sekolah untuk balita")
    self.driver.find_element(By.NAME, "sender_name").click()
    self.driver.find_element(By.NAME, "sender_name").send_keys("bram")
    self.driver.find_element(By.NAME, "sender_country").click()
    self.driver.find_element(By.NAME, "sender_country").send_keys("100252")
    self.driver.find_element(By.NAME, "sender_job").click()
    self.driver.find_element(By.NAME, "sender_job").send_keys("entrepreneur")
    time.sleep(2)
    self.driver.find_element(By.CSS_SELECTOR, ".form-control:nth-child(8) > .label").click()
    self.driver.find_element(By.NAME, "vendor_name").click()
    dropdown = self.driver.find_element(By.NAME, "vendor_name")
    dropdown.find_element(By.XPATH, "//option[. = 'Flip']").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".form-control:nth-child(11) > .label")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".form-control:nth-child(11) > .label")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".form-control:nth-child(11) > .label")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, ".space-y-4").click()
    self.driver.find_element(By.NAME, "source_country").send_keys("IDN")
    self.driver.find_element(By.NAME, "destination_country").click()
    self.driver.find_element(By.NAME, "destination_country").send_keys("GBR")
    self.driver.find_element(By.NAME, "beneficiary_full_name").click()
    self.driver.find_element(By.NAME, "beneficiary_full_name").send_keys("Selenium sender")
    self.driver.find_element(By.NAME, "beneficiary_bank_id").click()
    self.driver.find_element(By.NAME, "beneficiary_bank_id").send_keys("1807")
    self.driver.find_element(By.NAME, "beneficiary_email").click()
    self.driver.find_element(By.NAME, "beneficiary_email").send_keys("emial@email.com")
    self.driver.find_element(By.NAME, "beneficiary_msisdn").click()
    self.driver.find_element(By.NAME, "beneficiary_msisdn").send_keys("09584008222")
    self.driver.find_element(By.NAME, "beneficiary_nationality").click()
    self.driver.find_element(By.NAME, "beneficiary_nationality").send_keys("IDN")
    self.driver.find_element(By.NAME, "beneficiary_province").click()
    self.driver.find_element(By.NAME, "beneficiary_province").send_keys("United Kingdom")
    self.driver.find_element(By.NAME, "beneficiary_city").click()
    self.driver.find_element(By.NAME, "beneficiary_city").send_keys("Manchester")
    self.driver.find_element(By.NAME, "beneficiary_postal_code").click()
    self.driver.find_element(By.NAME, "beneficiary_postal_code").send_keys("M2")
    self.driver.find_element(By.NAME, "beneficiary_relationship").click()
    self.driver.find_element(By.NAME, "beneficiary_relationship").send_keys("FATHER")
    self.driver.find_element(By.NAME, "beneficiary_source_of_funds").click()
    self.driver.find_element(By.NAME, "beneficiary_source_of_funds").send_keys("BUSINESS")
    self.driver.find_element(By.NAME, "beneficiary_remittance_purposes").click()
    self.driver.find_element(By.NAME, "beneficiary_remittance_purposes").send_keys("EDUCATION")
    self.driver.find_element(By.NAME, "beneficiary_sort_code").click()
    self.driver.find_element(By.NAME, "beneficiary_sort_code").send_keys("506967")
    self.driver.find_element(By.NAME, "sender_place_of_birth").click()
    self.driver.find_element(By.NAME, "sender_place_of_birth").send_keys("100230")
    self.driver.find_element(By.NAME, "sender_date_of_birth").click()
    self.driver.find_element(By.NAME, "sender_date_of_birth").send_keys("1963-12-01")
    self.driver.find_element(By.NAME, "sender_address").click()
    self.driver.find_element(By.NAME, "sender_address").send_keys("Some Address Street 123")
    self.driver.find_element(By.NAME, "sender_identity_type").click()
    self.driver.find_element(By.NAME, "sender_identity_type").send_keys("nat_id")
    self.driver.find_element(By.NAME, "sender_identity_number").click()
    self.driver.find_element(By.NAME, "sender_identity_number").send_keys("1234789012347890")
    self.driver.find_element(By.NAME, "sender_email").click()
    self.driver.find_element(By.NAME, "sender_email").send_keys("sender@mail.com")
    self.driver.find_element(By.NAME, "sender_city").click()
    self.driver.find_element(By.NAME, "sender_city").send_keys("Sender City")
    self.driver.find_element(By.NAME, "sender_phone_number").click()
    self.driver.find_element(By.NAME, "sender_phone_number").send_keys("+628123456789")
    self.driver.find_element(By.NAME, "beneficiary_region").click()
    self.driver.find_element(By.NAME, "beneficiary_region").send_keys("10274")
    self.driver.find_element(By.NAME, "transaction_type").click()
    dropdown = self.driver.find_element(By.NAME, "transaction_type")
    dropdown.find_element(By.XPATH, "//option[. = 'C2C']").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary").click()
    
    
    # Assert page redirect
    expected_url = "https://basic.amanah-staging.cs.ui.ac.id/disbursement/list"
    assert_url_contains(self.driver, expected_url)
    
    # Navigate to the last page if pagination exists
    while True:
        try:
            next_button = self.driver.find_element(By.XPATH, "//button[span[@class='sr-only' and text()='Last']]")
            if not next_button.is_enabled():
                break
            next_button.click()
            time.sleep(2)
        except:
            break

    # Click the last item in the table
    time.sleep(2)
    table = self.driver.find_element(By.CSS_SELECTOR, ".table tbody")
    rows = table.find_elements(By.TAG_NAME, "tr")
    if rows:
        last_row = rows[-1]
        detail_button = last_row.find_element(By.CSS_SELECTOR, ".btn")
        detail_button.click()
        time.sleep(2)
        
        assert_id_disbursement(self.driver)
        assert_status_disbursement(self.driver)
    
    
  
